package ar.edu.dds.tpa.model;

import java.time.DayOfWeek;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.util.List;

import ar.edu.dds.tpa.geolocalizacion.Posicion;

public class LocalComercial extends PuntoDeInteres {
	private Rubro rubro;
<<<<<<< HEAD
	private HorarioDeAtencion horarioDeAtencion;

	public LocalComercial(String nombre, Posicion coordenadas, Rubro rubro) {
		super(nombre, coordenadas);
		this.rubro = rubro;
		horarioDeAtencion = new HorarioDeAtencion();
		if(rubro != null) {
			super.agregarPalabraClave(rubro.getNombre());
		}
=======
	private HorarioDeAtencion horarioSemanal;
	
	public LocalComercial(String nombre, Point coordenadas, Rubro rubro) {
		super(nombre, coordenadas);
		this.rubro = rubro;
		this.horarioSemanal = new HorarioDeAtencion();
>>>>>>> Emi
	}

	public Rubro getRubro() {
		return rubro;
	}
<<<<<<< HEAD
		
	public void agregarHorarioDeAtencion(DayOfWeek unDia, LocalTime horarioDesde, LocalTime horarioHasta) {
		horarioDeAtencion.agregarHorarioDeAtencion(unDia, horarioDesde, horarioHasta);
=======
	
	public void agregarDiaYHorarioDeAtencion(DayOfWeek dia, RangoDeHorario rango) {
		this.horarioSemanal.agregarRangoDeHorario(dia, rango);
>>>>>>> Emi
	}
	
	public void agregarHorarioDeAtencionComunEnVariosDias(List<DayOfWeek> dias, LocalTime horarioDesde, LocalTime horarioHasta) {
		horarioDeAtencion.agregarHorarioDeAtencion(dias, horarioDesde, horarioHasta);
	}

	@Override
	public boolean estaCercaDe(Posicion unaPosicion) {
		return getCoordenadas().distanciaA(unaPosicion) <= rubro.getRadioDeCercania() * 0.1;
	}

	@Override
	public boolean estaDisponibleEn(LocalDateTime unDiaYHorario) {
<<<<<<< HEAD
		return horarioDeAtencion.seAtiendeEn(unDiaYHorario);
	}
}
=======
		return this.horarioSemanal.estaDentroDeRangosDeHorario(unDiaYHorario);
	}

//	@Override
//	public boolean condicionDeBusqueda(String unTexto) {
//		return rubro.getNombreRubro() == unTexto
//				|| this.estaEtiquetadoPor(unTexto);
//	}
	
	@Override
	public ArrayList<String> getEtiquetas() {
		ArrayList<String> etiquetas = super.getEtiquetas();
		etiquetas.addAll(rubro.getEtiquetas());
		return etiquetas;
	}

}
>>>>>>> Emi
