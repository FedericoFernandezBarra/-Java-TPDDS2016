package ar.edu.dds.tpa.model;

import java.time.DayOfWeek;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.util.ArrayList;
import java.util.Arrays;
<<<<<<< HEAD
import java.util.List;
=======
>>>>>>> Emi

//TODO: Comportamiento repetido en horarios de atencion con localcomercial
public class Servicio {
	private String nombre;
<<<<<<< HEAD
	private HorarioDeAtencion horarioDeAtencion;
=======
	private HorarioDeAtencion horarioSemanal = new HorarioDeAtencion();;
>>>>>>> Emi
	
	public Servicio(String nombre) {
		this.nombre = nombre;
		horarioDeAtencion = new HorarioDeAtencion();
	}
	
	public Servicio(String nombre, HorarioDeAtencion horario){
		this(nombre);
		this.horarioSemanal = horario;
	}

	public String getNombre() {
		return nombre;
	}
	
	public HorarioDeAtencion getHorarioDeAtencion() {
		return horarioDeAtencion;
	}

<<<<<<< HEAD
	public void agregarHorarioDeAtencion(DayOfWeek unDia, LocalTime horarioDesde, LocalTime horarioHasta) {
		horarioDeAtencion.agregarHorarioDeAtencion(unDia, horarioDesde, horarioHasta);
	}
	
	public void agregarHorarioDeAtencion(List<DayOfWeek> dias, LocalTime horarioDesde, LocalTime horarioHasta) {
		horarioDeAtencion.agregarHorarioDeAtencion(dias, horarioDesde, horarioHasta);
	}

	public boolean atiendeEn(LocalDateTime unDiaYHorario) {
		return horarioDeAtencion.seAtiendeEn(unDiaYHorario);
	}
	
	public boolean atiendeEn(DayOfWeek unDia, LocalTime unHorario) {
		return horarioDeAtencion.seAtiendeEn(unDia, unHorario);
=======
	public void agregarDiaYHorarioDeAtencion(DayOfWeek dia, RangoDeHorario rango) {
		this.horarioSemanal.agregarRangoDeHorario(dia, rango);
	}

	public boolean estaDisponibleEn(LocalDateTime unDiaYHorario) {
		return this.horarioSemanal.estaDentroDeRangosDeHorario(unDiaYHorario);
	}
	
	public boolean estasIncluidoEnElNombre(String unTexto){
		return nombre == unTexto;
>>>>>>> Emi
	}
	
	public ArrayList<String> getEtiquetas(){
		ArrayList<String> etiquetas = new ArrayList<>();
<<<<<<< HEAD
		etiquetas.addAll(Arrays.asList(nombre.split(" ")));
=======
		etiquetas.addAll(Arrays.asList(this.nombre.split(" ")));
>>>>>>> Emi
		return etiquetas;
	}
}